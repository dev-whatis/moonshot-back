"""
(parsing_service.py) Utility functions for parsing and extracting data
from text content, such as LLM-generated Markdown.
"""

import re
from typing import List

def extract_product_names_from_markdown(markdown_text: str) -> List[str]:
    """
    Extracts product names from a Markdown string by finding all
    Level 3 headers (###).

    This pattern is reliable because the final recommendation prompt (STEP6)
    explicitly instructs the LLM to format product names this way.

    Args:
        markdown_text (str): The Markdown content generated by the LLM.

    Returns:
        List[str]: A list of the extracted product names. Returns an empty
                   list if no matches are found.
    """
    # Regex to find all lines starting with '### ' and capture the text after it.
    # - ^: Asserts the start of a line (due to re.MULTILINE).
    # - ### : Matches the literal header prefix.
    # - (.*): Captures all characters until the end of the line.
    # - $: Asserts the end of the line.
    pattern = r"^### (.*)$"
    
    # re.findall returns a list of all non-overlapping matches in the string.
    # When a capturing group is used in the pattern, it returns a list of
    # strings matching that group.
    # re.MULTILINE allows '^' and '$' to match the start/end of each line.
    product_names = re.findall(pattern, markdown_text, re.MULTILINE)
    
    return product_names